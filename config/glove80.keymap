
/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
/* Include all behaviour includes needed by system behaviors/macros */
#include <dt-bindings/zmk/outputs.h>

/* Include behaviour includes needed by key binds - automatically generated */
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

// layer define
#define ORIGINAL_BASE 0
#define ORIGINAL_LOWER 1
#define ORIGINAL_MAGIC 2
#define LAYER_BASEWIN 3
#define LAYER_BASEMAC 4
#define LAYER_KANAWIN 5
#define LAYER_KANAMAC 6
#define LAYER_SYMBOL 7
#define LAYER_NAGINATAWIN 8
#define LAYER_NAGINATESHIFTWIN 9
#define LAYER_NAGINATAMAC 10
#define LAYER_NAGINATASHIFTMAC 11
#define LAYER_UTILWIN  12
#define LAYER_UTILMAC 13
#define LAYER_EDITWIN 14
#define LAYER_EDITMAC 15
#define LAYER_WORDWIN 16
#define LAYER_WORDMAC 17
#define LAYER_LINEWIN 18
#define LAYER_LINEMAC 19
#define LAYER_TABPAGEWIN 20
#define LAYER_TABPAGEMAC 21
#define LAYER_BROWSERWIN 22
#define LAYER_BROWSERMAC 23
#define LAYER_FUNC 24
#define LAYER_WINDOWCHANGEWIN 25
#define LAYER_WINDOWCHANGEMAC 26
#define LAYER_WINDOWMOVEWIN 27
#define LAYER_WINDOWMOVEMAC 28


/ {
    /* Glove80 system behavior & macros */
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lower: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo ORIGINAL_LOWER>, <&to ORIGINAL_LOWER>;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            retro-tap;
            bindings = <&kp>, <&kp>;
        };
        rmo: retro_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "RETRO_MO";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            retro-tap;
            bindings = <&mo>, <&kp>;
        };
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
      };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
    };

    macros {
        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
    };

    macros {
        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
    };

    macros {
        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

    magic: magic_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MAGIC_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&rgb_ug_status_macro>;
    };

    /* Custom Defined Behaviors */
macros {
        ime_on_win: ime_on_win {
            label = "ime_on_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings
                = <&kp LANG1>
                , <&to 5>
                ;
        };
        ime_on_mac: ime_on_mac {
            label = "ime_on_mac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = <&kp LANG1>
                , <&to 6>
                ;
        };
        ime_off_win: ime_off_win {
            label = "ime_off_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = <&kp LANG2>
                , <&to LAYER_BASEWIN>
                ;
        };
        ime_off_mac: ime_off_mac {
            label = "ime_off_mac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = <&kp LANG2>
                , <&to 4>
                ;
        };
        esc_ime_off_win: esc_ime_off_win {
            label = "esc_ime_off_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = <&kp LANG2>
                , <&kp ESC>
                , <&to LAYER_BASEWIN>
                ;
        };
        esc_ime_off_mac: esc_ime_off_mac {
            label = "esc_ime_off_mac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = <&kp LANG2>
                , <&kp ESC>
                , <&to 4>
                ;
        };
        window_change_win: window_change_win {
            label = "window_change_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = <&macro_press &kp LALT &mo 25>
                , <&macro_tap &kp TAB>
                , <&macro_pause_for_release>
                , <&macro_release &kp LALT &mo 25>
                ;
        };
        window_change_mac: window_change_mac {
            label = "window_change_mac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = <&macro_press &kp LGUI &mo 26>
                , <&macro_tap &kp TAB>
                , <&macro_pause_for_release>
                , <&macro_release &kp LGUI &mo 26>
                ;
        };
        delete_line_win: delete_line_win {
            label = "delete_line_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp HOME>
                , <&macro_tap &kp BSPC>
                , <&macro_release &kp LSHFT>
                ;
        };
        henkan_win: henkan_win {
            label = "henkan_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp INT4>
                , < &to 5>
                ;
        };
        henkan_mac: henkan_mac {
            label = "henkan_mac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp LANG1>
                , < &kp LANG1>
                , < &to 6>
                ;
        };
        toggle_fold_win: toggle_fold_win {
            label = "toggle_fold_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp LC(K)>
                , < &kp LC(L)>
                ;
        };
        fold_all_win: fold_all_win {
            label = "fold_all_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp LC(K)>
                , < &kp LC(N0)>
                ;
        };
        toggle_fold_mac: toggle_fold_mac {
            label = "toggle_fold_mac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp LG(K)>
                , < &kp LG(L)>
                ;
        };
        fold_all_mac: fold_all_mac {
            label = "fold_all_mac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp LG(K)>
                , < &kp LG(N0)>
                ;
        };
        ime_on_nagi_win: ime_on_nagi_win {
            label = "ime_on_nagi_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings
                = <&kp LANG1>
                , <&to 8>
                ;
        };
        ime_on_nagi_mac: ime_on_nagi_mac {
            label = "ime_on_nagi_mac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings
                = <&kp LANG1>
                , <&to 10>
                ;
        };
        ga: ga {
            label = "ga";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp T>
                , < &kp LBKT>
                ;
        };
        gi: gi {
            label = "gi";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp G>
                , < &kp LBKT>
                ;
        };
        gu: gu {
            label = "gu";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp H>
                , < &kp LBKT>
                ;
        };
        ge: ge {
            label = "ge";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp SINGLE_QUOTE>
                , < &kp LBKT>
                ;
        };
        go: go {
            label = "go";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp B>
                , < &kp LBKT>
                ;
        };
        za: za {
            label = "za";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp X>
                , < &kp LBKT>
                ;
        };
        zi: zi {
            label = "zi";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp D>
                , < &kp LBKT>
                ;
        };
        zu: zu {
            label = "zu";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp R>
                , < &kp LBKT>
                ;
        };
        ze: ze {
            label = "ze";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp P>
                , < &kp LBKT>
                ;
        };
        zo: zo {
            label = "zo";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp C>
                , < &kp LBKT>
                ;
        };
        da: da {
            label = "da";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp Q>
                , < &kp LBKT>
                ;
        };
        di: di {
            label = "di";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp A>
                , < &kp LBKT>
                ;
        };
        du: du {
            label = "du";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp Z>
                , < &kp LBKT>
                ;
        };
        de: de {
            label = "de";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp W>
                , < &kp LBKT>
                ;
        };
        do: do {
            label = "do";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp S>
                , < &kp LBKT>
                ;
        };
        ba: ba {
            label = "ba";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp F>
                , < &kp LBKT>
                ;
        };
        bi: bi {
            label = "bi";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp V>
                , < &kp LBKT>
                ;
        };
        bu: bu {
            label = "bu";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp 2>
                , < &kp LBKT>
                ;
        };
        be: be {
            label = "be";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp EQUAL>
                , < &kp LBKT>
                ;
        };
        bo: bo {
            label = "bo";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp MINUS>
                , < &kp LBKT>
                ;
        };
        pa: pa {
            label = "pa";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp F>
                , < &kp RBKT>
                ;
        };
        pi: pi {
            label = "pi";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp V>
                , < &kp RBKT>
                ;
        };
        pu: pu {
            label = "pu";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp 2>
                , < &kp RBKT>
                ;
        };
        pe: pe {
            label = "pe";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp EQUAL>
                , < &kp RBKT>
                ;
        };
        po: po {
            label = "po";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = < &kp MINUS>
                , < &kp RBKT>
                ;
        };
        nn: nn {
            label = "nn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;            
            bindings
                = <&macro_tap_time 0>
                , < &kp N>
                , < &kp N>
                ;
        };
        bt_0_mac: bt_0_mac {
            label = "bt_0_mac";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 0>
                , <&to 4>
                ;
        };
        bt_1_win: bt_1_win {
            label = "bt_1_win";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>
                , <&bt BT_SEL 1>
                , <&to LAYER_BASEWIN>
                ;
        };
    };

    /* Automatically generated keymap */
    keymap {
        compatible = "zmk,keymap";

        // layer0
        layer_Base {
            bindings = <
      &to LAYER_BASEWIN   &to 4  &kp F3    &kp F4     &kp F5                                                                                        &kp F6     &kp F7    &kp F8    &kp F9    &kp F10
  &kp EQUAL  &kp N1  &kp N2    &kp N3     &kp N4  &kp N5                                                                  &kp LS(LALT)  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
    &kp TAB   &kp Q   &kp W     &kp E      &kp R   &kp T                                                                         &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
    &kp ESC   &kp A   &kp S     &kp D      &kp F   &kp G                                                                         &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
  &kp GRAVE   &kp Z   &kp X     &kp C      &kp V   &kp B  &kp LSHFT  &kp LCTRL    &lower  &kp LGUI  &kp RCTRL  &kp RSHFT         &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp PG_UP
 &magic 2 0  &kp F1  &kp F2  &kp LEFT  &kp RIGHT           &kp BSPC    &kp DEL  &kp LALT  &kp RALT    &kp RET  &kp SPACE                &kp UP   &kp DOWN  &kp LBKT  &kp RBKT  &kp PG_DN
            >;
        };

        // layer1
        layer_Lower {
            bindings = <
 &kp C_BRI_DN  &kp C_BRI_UP      &kp C_PREV      &kp C_NEXT         &kp C_PP                                                                                    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP            &none  &kp PAUSE_BREAK
       &trans         &none           &none           &none            &none   &kp HOME                                                   &kp LEFT_PARENTHESIS  &kp KP_NUM  &kp KP_EQUAL  &kp KP_SLASH  &kp KP_MULTIPLY  &kp PRINTSCREEN
       &trans         &none           &none    &kp UP_ARROW           &kp AT    &kp END                                                  &kp RIGHT_PARENTHESIS   &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_MINUS   &kp SCROLLLOCK
       &trans         &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_UP                                                            &kp PERCENT   &kp KP_N4     &kp KP_N5     &kp KP_N6      &kp KP_PLUS            &none
       &trans     &kp K_APP           &none         &kp F11          &kp F12  &kp PG_DN  &trans  &trans   &to ORIGINAL_BASE  &trans  &trans  &trans              &kp COMMA   &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_ENTER           &trans
   &magic 2 0      &kp CAPS         &kp INS         &kp F11          &kp F12             &trans  &trans  &trans  &trans  &trans  &trans                          &kp KP_N0     &kp KP_N0    &kp KP_DOT     &kp KP_ENTER           &trans
            >;
        };

        //layer2
        layer_Magic {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
       &none            &none            &none            &none            &none            &none                                                         &none   &none   &none   &none   &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
      &reset            &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none          &reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &none
            >;
        };

        // layer3
        layer_BaseWin {
            bindings = <
      &to LAYER_BASEWIN   &to 4       &to 0     &none   &none                                                                                           &none   &none         &none   &bt_0_mac        &bt_1_win
      &none   &none       &none     &none   &none      &none                                                                        &none   &none   &none         &none   &none        &none
      &none   &none       &kp H     &kp O   &kp U      &kp X                                                                        &kp G   &kp C   &kp M         &kp R   &none        &ime_on_nagi_win
      &none   &kp Y       &kp I     &kp E   &kp A    &kp DOT                                                                        &kp D   &kp S   &kp T         &kp N   &kp B  &none
      &none   &none  &kp LS(N2)  &kp EXCL   &kp K  &kp COMMA        &sk LCTRL  &sk LGUI    &sk LALT   &skq RALT  &skq RGUI    &skq RCTRL   &kp W   &kp F   &kp L         &kp P   &none        &none
 &magic 2 0   &none  &kp LS(N7)     &kp Q   &kp J             &gqt LSHFT SPACE &rmo 14 TAB  &mo 24  &skq RSHFT    &mo 12  &rmo 7 RET           &kp V   &kp Z  &kp LS(FSLH)   &none        &none
            >;
        };

        // layer4
        layer_BaseMac {
            bindings = <
      &to LAYER_BASEWIN   &to 4       &to 0     &none   &none                                                                                             &none   &none         &none   &bt_0_mac        &bt_1_win
      &none   &none       &none     &none   &none      &none                                                                          &none   &none   &none         &none   &none        &none
      &none   &none       &kp H     &kp O   &kp U      &kp X                                                                          &kp G   &kp C   &kp M         &kp R   &none        &ime_on_nagi_mac
      &none   &kp Y       &kp I     &kp E   &kp A    &kp DOT                                                                          &kp D   &kp S   &kp T         &kp N   &kp B  &none
      &none   &none  &kp LS(N2)  &kp EXCL   &kp K  &kp COMMA         &sk LGUI  &sk LCTRL    &sk LALT   &skq RALT  &skq RCTRL    &skq RGUI   &kp W   &kp F   &kp L         &kp P   &none        &none
 &magic 2 0   &none  &kp LS(N7)     &kp Q   &kp J             &gqt LSHFT SPACE &rmo 15 TAB  &mo 24   &skq RSHFT &mo 13  &rmo 7 RET           &kp V   &kp Z  &kp LS(FSLH)   &none        &none
            >;
        };

        // layer5
        layer_KanaWin {
            bindings = <
        &none      &none   &none   &none   &none                                                                             &none   &none      &none    &bt_0_mac        &bt_1_win
        &none      &none   &none   &kp H   &none   &none                                                             &none   &none   &none      &none    &none   &none
        &none      &none   &kp M   &kp R   &kp S   &kp H                                                             &kp Y   &kp E   &kp O  &kp MINUS    &none   &none
        &none      &none   &kp K   &kp T   &kp N   &kp D                                                             &kp DOT   &kp A   &kp I      &kp U    &none   &none
        &none      &none   &kp B   &kp W   &nn   &kp G  &sk LCTRL  &sk LGUI    &sk LALT   &none   &none    &mo 7   &kp COMMA    &kp X   &kp V      &none    &none   &none
        &none      &none   &kp P   &kp F   &kp Z          &kp SPACE    &mo 14  &lt 24 TAB   &none  &mo 12  &kp RET    &none   &none      &none    &none   &none
            >;
        };

        // layer6
        layer_KanaMac {
            bindings = <
        &none      &none   &none   &none   &none                                                                              &none   &none      &none    &bt_0_mac        &bt_1_win
        &none      &none   &none   &kp H   &none   &none                                                              &none   &none   &none      &none    &none   &none
        &none      &none   &kp M   &kp R   &kp S   &kp H                                                              &kp Y   &kp E   &kp O  &kp MINUS    &none   &none
        &none      &none   &kp K   &kp T   &kp N   &kp D                                                              &kp DOT   &kp A   &kp I      &kp U    &none   &none
        &none      &none   &kp B   &kp W   &nn   &kp G   &sk LGUI  &sk LCTRL    &sk LALT   &none   &none    &mo 7   &kp COMMA     &kp X   &kp V      &none &none   &none
        &none      &none   &kp P   &kp F   &kp Z          &kp SPACE     &mo 15  &lt 24 TAB   &none  &mo 13  &kp RET    &none   &none      &none    &none   &none
            >;
        };

        // layer7
        layer_Symbol {
            bindings = <
        &none         &none          &none          &none        &none                                                                                   &none          &none                &none         &none   &none
        &none         &none          &none          &none        &none         &none                                                       &none         &none          &none                &none         &none   &none
        &none    &kp LS(N7)  &kp LS(COMMA)  &kp LS(MINUS)  &kp LS(DOT)      &kp LBKT                                                  &kp LS(N3)      &kp RBKT   &kp LS(INT1)      &kp NON_US_HASH  &kp LS(FSLH)   &none
        &none      &kp INT1     &kp LS(N8)      &kp MINUS   &kp LS(N9)  &kp LS(SEMI)                                                  &kp LS(N5)  &kp LS(RBKT)       &kp SEMI  &kp LS(NON_US_HASH)  &kp LS(LBKT)   &none
        &none  &kp LA(INT3)    &kp LS(SQT)        &kp SQT     &kp FSLH    &kp LS(N4)   &none   &none   &none   &none   &none   &none   &kp EQUAL  &kp LS(INT3)  &kp LS(EQUAL)           &kp LS(N6)         &none   &none
        &none         &none          &none          &none        &none                 &none   &none   &none   &none   &none   &none                     &none          &none                &none         &none   &none
            >;
        };

        // layer8
        layer_NaginataWin {
            bindings = <
        &none  &none  &none  &none  &none                                                                                                &none  &none  &none  &none  &none
        &none  &none     &gi     &de    &zi     &none                                                                                 &none   &za     &zu     &be     &none  &none
        &none   &kp RBKT  &kp G  &kp W  &kp D  &kp LS(Z)                                                                                &kp Y  &kp O  &kp DOT  &kp R  &none  &none
&ime_off_win    &kp LS(N9) &kp SQT  &kp S  &kp T  &kp Z                                                                                &kp H  &kp N3  &kp E  &kp N4  &kp SEMI  &none
        &none  &di  &kp V      &kp F     &kp B       &kp C   &mo 9  &kp LS(COMMA)  &kp LS(RBKT) &kp LS(NON_US_HASH)  &kp LS(INT3)  &kp LS(DOT)  &kp Q  &kp U  &kp LS(N7)  &kp LS(N8)  &none  &none
        &none  &none  &kp LS(N0)  &kp INT1  &kp MINUS           &kp SPACE  &mo 14   &mo 24  &none   &mo 12  &kp ENTER                 &kp EQUAL  &ga  &da  &none  &none
            >;
        };

        // layer9
        layer_NaginateShiftWin {
            bindings = <
        &none  &none  &none  &none  &none                                                                                                &none  &none  &none  &none  &none
        &none  &none  &ge  &do  &du  &none                                                              &none  &pa  &pi  &pu  &none  &none
        &none  &kp LBKT  &kp COMMA  &kp L  &kp SLASH  &kp N8                                                  &kp LS(N6)  &kp X  &kp N9  &kp N5 &none  &none
        &none  &kp P  &kp N1  &kp I  &kp J  &kp A                                                  &kp N7  &kp K  &kp M  &kp 0  &ze  &none
        &none  &none  &kp LS(N3)  &kp LS(E)  &kp LS(N4)  &kp N  &none  &none  &none  &none  &ba  &go  &kp N6  &bu  &kp NON_US_HASH  &kp N2  &none  &none
        &none  &none  &bo  &kp LS(N5)  &kp LS(N6)          &none  &none  &none  &none  &bi  &kp ENTER          &gu  &pe  &po  &none  &none
            >;
        };

        // leyer10
        layer_NaginataMac {
            bindings = <
        &none  &none  &none  &none  &none                                                                                                &none  &none  &none  &none  &none
        &none  &none     &gi     &de    &zi     &none                                                                                 &none   &za     &zu     &be     &none  &none
        &none   &kp RBKT  &kp G  &kp W  &kp D  &kp LS(Z)                                                                                &kp Y  &kp O  &kp DOT  &kp R  &none  &none
&ime_off_mac    &kp LS(N9) &kp SQT  &kp S  &kp T  &kp Z                                                                                &kp H  &kp N3  &kp E  &kp N4  &kp SEMI  &none
        &none  &di  &kp V      &kp F     &kp B       &kp C   &mo 11  &kp LS(COMMA)  &kp LS(RBKT) &kp LS(NON_US_HASH)  &kp LS(INT3)  &kp LS(DOT)  &kp Q  &kp U  &kp LS(N7)  &kp LS(N8)  &none  &none
        &none  &none  &kp LS(N0)  &kp INT1  &kp MINUS           &kp SPACE  &mo 15   &mo 24  &none   &mo 13  &kp ENTER                 &kp EQUAL  &ga  &da  &none  &none           
            >;
        };

        // layer11
        layer_NaginataShiftMac {
            bindings = <
        &none  &none  &none  &none  &none                                                                                                &none  &none  &none  &none  &none
        &none  &none  &ge  &do  &du  &none                                                              &none  &pa  &pi  &pu  &none  &none
        &none  &kp LBKT  &kp COMMA  &kp L  &kp SLASH  &kp N8                                                  &kp LS(N6)  &kp X  &kp N9  &kp N5 &none  &none
        &none  &kp P  &kp N1  &kp I  &kp J  &kp A                                                  &kp N7  &kp K  &kp M  &kp 0  &ze  &none
        &none  &none  &kp LS(N3)  &kp LS(E)  &kp LS(N4)  &kp N  &none  &none  &none  &none  &ba  &go  &kp N6  &bu  &kp NON_US_HASH  &kp N2  &none  &none
        &none  &none  &bo  &kp LS(N5)  &kp LS(N6)          &none  &none  &none  &none  &bi  &kp ENTER          &gu  &pe  &po  &none  &none
            >;
        };

        // layer12
        layer_UtilWin {
            bindings = <
  &none   &none        &none   &none             &none                                                                               &none   &none      &none   &none   &none
  &none   &none        &none   &none             &none    &none                                                            &none     &none   &none      &none   &none   &none
  &none  &none       &kp N2  &kp N1            &kp N0   &kp N4                                                           &kp N7    &kp N6  &kp N5     &kp N9  &none  &none
 &trans  &kp N3     &none  &mo 16  &esc_ime_off_win  &ime_on_win                                                         &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp N8  &trans
 &trans  &trans  &henkan_win  &mo 18            &mo 20   &ime_off_win  &kp LCTRL  &kp LGUI  &kp LALT  &trans  &trans  &trans    &trans  &kp BSPC  &kp LGUI     &trans  &trans  &trans
 &trans  &trans       &trans  &trans            &trans           &kp LSHFT    &mo 22    &trans  &trans  &trans  &trans              &trans  &trans     &trans  &trans  &trans
            >;
        };

        //layer13
        layer_UtilMac {
            bindings = <
 &trans  &trans         &trans  &trans            &trans                                                                               &trans  &trans     &trans  &trans  &trans
 &trans  &trans         &trans  &trans            &trans   &trans                                                            &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &none         &kp N2  &kp N1            &kp N0   &kp N4                                                            &kp N7    &kp N6  &kp N5     &kp N9   &none   &kp LG(LS(N5))
 &kp LG(LS(N3))  &kp N3  &none  &mo 17  &esc_ime_off_mac  &ime_on_mac                                                          &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp N8  &kp LG(LS(N4))
 &trans  &trans    &henkan_mac  &mo 19            &mo 21   &ime_off_mac &kp LGUI  &kp LCTRL  &kp LALT  &trans  &trans  &trans    &trans  &kp BSPC  &kp LA(SPACE)  &trans  &trans  &trans
 &trans  &trans         &trans  &trans            &trans           &kp LSHFT     &mo 23    &trans  &trans  &trans  &trans              &trans  &trans     &trans  &trans  &trans
            >;
        };

        // layer14
        layer_EditWin {
            bindings = <
         &trans      &trans              &trans        &trans            &trans                                                                         &trans  &trans  &trans  &trans  &trans
         &trans      &trans              &trans        &kp LG(LS(S))  &kp LG(PSCRN)         &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
         &trans      &trans           &kp LC(W)  &kp LC(FSLH)  &toggle_fold_win  &fold_all_win                                                  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LC(LS(N3))  &kp LA(F4)  &window_change_win     &kp LC(C)         &kp LC(V)      &kp LC(S)                                                  &none  &kp LC(LA(DOWN))  &kp LC(LA(UP))  &none  &trans  &trans
 &kp LC(LS(N4))      &trans              &mo 27     &kp LC(Y)         &kp LC(X)      &kp LC(Z)  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
         &trans      &trans              &trans        &trans         &kp LG(V)                 &trans  &trans  &trans  &trans  &trans  &mo 24          &trans  &trans  &trans  &trans  &trans
            >;
        };

        // layer15
        layer_EditMac {
            bindings = <
 &trans     &trans              &trans        &trans            &trans                                                                         &trans  &trans  &trans  &trans  &trans
 &trans     &trans      &kp LG(LS(N5))  &kp LG(LS(N4))   &kp LG(LS(N3))  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans     &trans           &kp LG(W)  &kp LG(FSLH)  &toggle_fold_mac  &fold_all_mac                                                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp LG(Q)  &window_change_mac     &kp LG(C)         &kp LG(V)      &kp LG(S)                                                  &trans  &kp LG(LA(DOWN))  &kp LG(LA(UP))  &trans  &trans  &trans
 &trans     &trans              &mo 28     &kp LG(Y)         &kp LG(X)      &kp LG(Z)  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans     &trans              &trans        &trans     &kp LG(LS(V))                 &trans  &trans  &trans  &trans  &trans  &mo 24          &trans  &trans  &trans  &trans  &trans
            >;
        };

        // layer16
        layer_WordWin {
            bindings = <
 &trans  &trans  &trans  &trans  &trans                                                                                 &trans     &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                           &trans        &trans     &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                           &trans        &trans     &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                     &kp LC(LEFT)     &kp PG_DN  &kp PG_UP  &kp LC(RIGHT)  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans        &trans  &kp LC(BSPC)     &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans          &kp LSHFT  &trans  &trans  &trans  &trans  &trans                      &trans     &trans         &trans  &trans  &trans
            >;
        };

        // layer17
        layer_WordMac {
            bindings = <
 &trans  &trans  &trans  &trans  &trans                                                                                 &trans     &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                           &trans        &trans     &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                           &trans        &trans     &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                     &kp LA(LEFT)     &kp PG_DN  &kp PG_UP  &kp LA(RIGHT)  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans        &trans  &kp LA(BSPC)     &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans          &kp LSHFT  &trans  &trans  &trans  &trans  &trans                      &trans     &trans         &trans  &trans  &trans
            >;
        };

        // layer18
        layer_LineWin {
            bindings = <
 &trans  &trans  &trans  &trans  &trans                                                                                 &trans        &trans   &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                       &trans            &trans        &trans   &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                       &trans            &trans        &trans   &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                     &kp HOME       &kp LC(END)  &kp LC(HOME)  &kp END  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans    &trans  &delete_line_win        &trans   &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans          &kp LSHFT  &trans  &trans  &trans  &trans  &trans                      &trans        &trans   &trans  &trans  &trans
            >;
        };

        // layer19
        layer_LineMac {
            bindings = <
 &trans  &trans  &trans  &trans  &trans                                                                                 &trans      &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                           &trans        &trans      &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                           &trans        &trans      &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                     &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT)  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans        &trans  &kp LG(BSPC)      &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans          &kp LSHFT  &trans  &trans  &trans  &trans  &trans                      &trans      &trans         &trans  &trans  &trans
            >;
        };

        // layer20
        layer_TabpageWin {
            bindings = <
 &trans  &trans  &trans  &trans  &trans                                                                               &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans        &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans        &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                  &kp LC(PG_UP)  &kp LA(LEFT)  &kp LA(RIGHT)  &kp LC(PG_DN)  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans        &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans                       &trans         &trans         &trans  &trans  &trans
            >;
        };

        // layer21
        layer_TabpageMac {
            bindings = <
 &trans  &trans  &trans  &trans  &trans                                                                                &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans         &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans         &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                  &kp LC(PG_UP)  &kp LA(PG_DN)  &kp LA(PG_UP)  &kp LC(PG_DN)  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans         &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans                        &trans         &trans         &trans  &trans  &trans
            >;
        };

        // layer22
        layer_BrowserWin {
            bindings = <
 &trans  &trans  &trans  &trans  &trans                                                                               &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans        &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans        &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                  &kp LC(PG_UP)  &kp LA(LEFT)  &kp LA(RIGHT)  &kp LC(PG_DN)  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans        &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans                       &trans         &trans         &trans  &trans  &trans
            >;
        };

        // layer23
        layer_BrowserMac {
            bindings = <
 &trans  &trans  &trans  &trans  &trans                                                                               &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans        &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                         &trans        &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                                  &kp LC(PG_UP)  &kp LG(LEFT)  &kp LG(RIGHT)  &kp LC(PG_DN)  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans        &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans                       &trans         &trans         &trans  &trans  &trans
            >;
        };

        // layer24
        layer_Func {
            bindings = <
 &trans  &trans  &trans   &trans   &trans                                                                        &trans        &trans  &trans   &trans  &trans
 &trans  &trans  &trans   &trans   &trans  &trans                                                  &trans        &trans        &trans  &trans   &trans  &trans
 &trans  &trans  &trans  &kp F11  &kp F12  &trans                                                  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &trans   &trans  &trans
 &trans  &kp F1  &kp F2   &kp F3   &kp F4  &kp F5                                                  &kp F6        &kp F7        &kp F8  &kp F9  &kp F10  &trans
 &trans  &trans  &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans  &trans   &trans  &trans
 &trans  &trans  &trans   &trans   &trans          &trans  &trans  &trans  &trans  &trans  &trans                &trans        &trans  &trans   &trans  &trans
            >;
        };

        // layer25
        layer_WindowChangeWin {
            bindings = <
 &trans  &trans  &trans    &trans     &trans                                                                      &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans    &trans     &trans  &trans                                                    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans    &trans     &trans  &trans                                                    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans  &kp LEFT  &kp RIGHT  &trans                                                  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
 &trans  &trans  &trans    &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans    &trans     &trans          &trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans     &trans  &trans  &trans
            >;
        };

        // layer26
        layer_WindowChangeMac {
            bindings = <
 &trans  &trans  &trans    &trans     &trans                                                                      &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans    &trans     &trans  &trans                                                    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans    &kp DOWN     &kp UP  &trans                                                    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans  &kp LEFT  &kp RIGHT  &trans                                                  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
 &trans  &trans  &trans    &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans
 &trans  &trans  &trans    &trans     &trans          &trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans     &trans  &trans  &trans
            >;
        };

        // layer27
        layer_WindowMoveWin {
            bindings = <
 &trans  &trans  &trans  &trans      &trans                                                                               &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans      &trans  &trans                                                        &trans         &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans      &trans  &trans                                                        &trans         &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &kp LG(UP)  &trans                                                  &kp LG(LEFT)  &kp LG(PG_DN)  &kp LG(PG_UP)  &kp LG(RIGHT)  &trans  &trans
 &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans         &trans         &trans         &trans  &trans  &trans
 &trans  &trans  &trans  &trans      &trans          &trans  &trans  &trans  &trans  &trans  &trans                       &trans         &trans         &trans  &trans  &trans
            >;
        };

        // layer28
        layer_WindowMoveMac {
            bindings = <
 &trans  &trans  &trans  &trans         &trans                                                                                      &trans          &trans             &trans  &trans  &trans
 &trans  &trans  &trans  &trans         &trans  &trans                                                            &trans            &trans          &trans             &trans  &trans  &trans
 &trans  &trans  &trans  &trans         &trans  &trans                                                            &trans            &trans          &trans             &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &kp LA(LG(F))  &trans                                                  &kp LA(LG(LEFT))  &kp LA(LG(DOWN))  &kp LA(LG(UP))  &kp LA(LG(RIGHT))  &trans  &trans
 &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans            &trans          &trans             &trans  &trans  &trans
 &trans  &trans  &trans  &trans         &trans          &trans  &trans  &trans  &trans  &trans  &trans                              &trans          &trans             &trans  &trans  &trans
            >;
        };

    };
};
